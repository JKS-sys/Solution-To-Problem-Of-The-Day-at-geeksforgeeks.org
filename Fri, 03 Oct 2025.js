// Fri, 03 Oct 2025,

// Possible Words From Phone Digits
// Difficulty: MediumAccuracy: 52.79%Submissions: 75K+Points: 4Average Time: 20m
// You are given a keypad (as shown in the diagram) and an array arr[ ] containing digits, your task is to list all possible words in any order which can be generated by pressing numbers in arr[] sequentially.

// Note: Number 0 and 1 do not map to any letters.
// You can return the words in any order, the driver code will print them in sorted order.

// Examples :

// Input: arr[] = [2, 3]
// Output: [ad, ae, af, bd, be, bf, cd, ce, cf]
// Explanation: When we press 2 and 3 total 3 x 3 = 9 possible words formed.
// Input: arr[] = [2]
// Output: [a, b, c]
// Explanation: When we press 2 total 3 possible words formed.
// Constraints:
// 1 ≤ arr.size() ≤ 9
// 0 ≤ arr[i] ≤ 9
// Expected Complexities
// Time Complexity: O(4 ^ n)
// Auxiliary Space: O(n)

class Solution {
  possibleWords(arr) {
    if (arr.length === 0) return [];

    const digitMap = {
      2: "abc",
      3: "def",
      4: "ghi",
      5: "jkl",
      6: "mno",
      7: "pqrs",
      8: "tuv",
      9: "wxyz",
    };

    const result = [];

    const backtrack = (index, current) => {
      if (index === arr.length) {
        if (current.length > 0) {
          result.push(current);
        }
        return;
      }

      const digit = arr[index].toString();

      if (digit === "0" || digit === "1") {
        backtrack(index + 1, current);
      } else {
        const letters = digitMap[digit];
        for (let i = 0; i < letters.length; i++) {
          backtrack(index + 1, current + letters[i]);
        }
      }
    };

    backtrack(0, "");
    return result;
  }
}
